#!/bin/sh

export MISSION=${0##*/}
export rlog=$HOME/rlog/rlog.$MISSION
mkdir -p $HOME/rlog
recho()
{
    #progress echo, for debug during run as the crontab task.
    if [ ! -z "$rlog" ] ; then
    echo `date +"%Y-%m-%d %H:%M:%S"` " $@" >>$rlog.log.txt
    fi
    echo `date +"%Y-%m-%d %H:%M:%S"` " $@"
}
recho_time_consumed()
{
    tm_b=`date +%s`
    tm_c=$((tm_b-$1))
    tm_h=$((tm_c/3600))
    tm_m=$((tm_c/60))
    tm_m=$((tm_m%60))
    tm_s=$((tm_c%60))
    shift
    recho "$@" "$tm_c seconds / $tm_h:$tm_m:$tm_s consumed."
}

help()
{
    cat <<-EOF >&2

    usage: ./${0##*/} [ repodir [ cvs module name ]]
    --help this help

    example: ${0##*/} . projects/sw/sdk/configs

	EOF
}

[ $# -lt 1 ] && help && exit 0
while [ $# -gt 0 ]; do
    case $1 in
    -nocvs | nocvs) CONFIG_NOCVS=y; shift ;;
    -h | --help) 	help        exit 0;;
    *)
        break;
        ;;
    esac
done

list="
projects/sw/sdk/configs
projects/sw/sdk/automation
"

THISIP=`/sbin/ifconfig eth0 | grep 'inet addr' | sed 's/.*addr:\(.*\)\(  Bcast.*\)/\1/'`

if [ -z $CVSROOT ];then
    recho "Please set CVSROOT first, suggest to use command:"
    recho "$ export CVSROOT=:pserver:$USER@cvs.c2micro.com:/cvsroot"
    recho "$ cvs login"
    #exit 0
    if [ "${THISIP:0:6}" == "10.16." ];then #Beijing's server
        export CVSROOT=:pserver:$USER@cvs.c2micro.com:/cvsroot
    else  #Suppose to San Jose's server
        export CVSROOT=/db/cvsroot
    fi
fi
REPODIR=$(readlink -f ${1:-$HOME/maintreetag})
CVSDIR=$REPODIR
mkdir -p $REPODIR $CVSDIR
[ -d $REPODIR ] || exit 0
cd $REPODIR
if [ -f sdk_content ];then
    list="`cat sdk_content`"
fi
if [ $2 ]; then
    list="$2"
fi

logcvs=$REPODIR/log.cvs
for i in $list;do
    idotgit=$REPODIR/${i##*/}.git
    pushd $CVSDIR
    echo "Checkout $i"
    [ -z $CONFIG_NOCVS ] && cvs -q co $i >>$logcvs
    pushd $i
    if [ -d .git ];then 
        clean=$(git status | grep "nothing to commit (working directory clean)")
        if [ "$clean" == "" ]; then
	    echo "Update git on $i" >>$logupd
            echo "add these to git"
            git status  
            git add .
            git commit -m "commit at $(date)"
            git push $idotgit
        else
            recho "$i : git is clean, does not push."
        fi	
    else
	recho "Create git on $i" >>$lognew
	githere
    fi
    popd
    popd
    if [ ! -d $idotgit ];then
        git clone --bare $CVSDIR/$i
        if [ ! -d  $idotgit -a -d ${i##*/} ];then
            mv ${i##*/} $idotgit
        fi
	recho "Create bare git on $idotgit" 
    else
        recho "found bare git $idotgit for $i"
    fi
done
recho "Done on `date`"
repohere
